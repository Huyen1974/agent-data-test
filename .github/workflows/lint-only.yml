name: Lint Only
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      # Install pip-tools
      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install 'pip-tools==7.*'

      # Compile lockfile (CP0.1 check)
      - name: Compile lockfile and check consistency
        run: |
          pip-compile --no-upgrade pyproject.toml
          git diff --exit-code requirements.txt

      # Import assertion script (CP0.9 check)
      - name: Verify dependency versions
        run: |
          pip install -r requirements.txt
          python -c "
          import langroid, slowapi, redis, pkg_resources, sys
          from packaging.version import Version as V
          assert pkg_resources.get_distribution('langroid').version=='0.58.0'
          assert pkg_resources.get_distribution('slowapi').version=='0.1.9'
          assert V('5.0.1')<=V(redis.__version__)<V('6.0.0')
          print('âœ“ deps OK')
          "

      # Install pre-commit for CP0.2 check
      - name: install pre-commit
        run: python -m pip install pre-commit==3.*

      # Pre-commit check (CP0.2)
      - name: pre-commit check
        run: pre-commit run --all-files --color always

      # Install test dependencies (CP0.3)
      - name: install test deps
        run: python -m pip install -e . pytest pytest-cov httpx

      # Run unit tests (CP0.3)
      - name: unit tests
        run: pytest

      # Manifest drift check (CP0.4)
      - name: manifest drift check (CP0.4)
        run: |
          python scripts/collect_manifest.py --check tests/.snapshot

      # Secret scan (CP0.5)
      - name: secret scan (CP0.5)
        run: |
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
          trufflehog filesystem . --fail --exclude-paths=.trufflehog-exclude --results=verified

  iac-plan:
    name: terraform plan
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.*"

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -no-color -detailed-exitcode
        continue-on-error: true
        id: plan

      - name: Check Plan Exit Code
        if: steps.plan.outcome == 'failure' && steps.plan.outputs.exitcode == 2
        run: |
          echo "Terraform plan detected changes"
          exit 2

  qdrant-fn-check:
    name: qdrant function check
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests

      - name: Check Qdrant Function Status
        env:
          QDRANT_FN_URL: "https://httpbin.org/json"
        run: python scripts/check_qdrant_fn.py

  qdrant-cost:
    name: qdrant cost calculation
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Calculate Qdrant Costs
        run: python scripts/qdrant_cost_calc.py

      - name: Upload cost artifact
        uses: actions/upload-artifact@v4
        with:
          name: qdrant-cost-report
          path: qdrant_cost.json

  checkpoint-gate:
    name: checkpoint gate
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      # Install pip-tools and dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install 'pip-tools==7.*'
          pip install -r requirements.txt
          python -m pip install -e . pytest pytest-cov httpx pre-commit packaging

      # Run checkpoint runner
      - name: Run checkpoint gate
        run: python scripts/checkpoint_runner.py

  actionlint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-actionlint@v1
