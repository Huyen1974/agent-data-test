name: Sync Secrets

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      target_repo:
        description: 'Target repository (agent-data-test or agent-data-production)'
        required: true
        type: choice
        options:
          - agent-data-test
          - agent-data-production

# This workflow demonstrates WIF/OIDC PAT injection pattern
# The actual sync-secrets.yml should be in chatgpt-githubnew repo per GH-LAW §5

jobs:
  sync-secrets:
    name: Sync Secrets to Target Repository
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      id-token: write  # Required for WIF/OIDC
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: access_token

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: latest

      - name: Fetch PAT from Secret Manager
        id: fetch-pat
        run: |
          echo "Fetching GitHub PAT from Secret Manager..."
          gcloud secrets versions access latest --secret="gh_pat_sync_secrets" > pat.txt
          echo "::add-mask::$(cat pat.txt)"
          echo "GH_PAT=$(cat pat.txt)" >> "$GITHUB_ENV"
          rm pat.txt  # Clean up temporary file

      - name: Verify PAT access
        run: |
          echo "Verifying PAT has required permissions..."
          curl -s -H "Authorization: token $GH_PAT" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/user" | jq -r '.login'

      - name: Sync secrets to target repository
        run: |
          target_repo="${{ github.event.inputs.target_repo }}"
          echo "Syncing secrets to repository: $target_repo"

          # Example: Sync critical secrets (actual implementation would be more comprehensive)
          secrets_to_sync=(
            "GCP_PROJECT_ID"
            "GCP_SERVICE_ACCOUNT"
            "GCP_WIF_PROVIDER"
            "GCP_WIF_POOL"
            "OPENAI_API_KEY"
            "QDRANT_CLUSTER1_KEY"
            "QDRANT_CLUSTER1_ID"
            "SLACK_WEBHOOK_URL"
          )

          for secret_name in "${secrets_to_sync[@]}"; do
            echo "Processing secret: $secret_name"

            # Fetch secret value from Secret Manager
            secret_value=$(gcloud secrets versions access latest --secret="$secret_name" 2>/dev/null || echo "")

            if [[ -n "$secret_value" ]]; then
              # Update secret in target repository
              echo "Updating $secret_name in $target_repo..."
              gh secret set "$secret_name" --body "$secret_value" --repo "your-org/$target_repo"
              echo "✅ Updated $secret_name"
            else
              echo "⚠️ Secret $secret_name not found in Secret Manager"
            fi
          done

        env:
          GITHUB_TOKEN: ${{ env.GH_PAT }}

      - name: Verify sync completion
        run: |
          target_repo="${{ github.event.inputs.target_repo }}"
          echo "=== Sync Summary ==="
          echo "Target repository: $target_repo"
          echo "Sync completed at: $(date -Iseconds)"
          echo ""
          echo "This sync ensures compliance with:"
          echo "- HP-05 (Constitution v1.11e): Central Secrets Inheritance"
          echo "- GH-LAW §5: Centralized secrets management"
          echo "- GC-LAW §3: Secret Management protocols"
