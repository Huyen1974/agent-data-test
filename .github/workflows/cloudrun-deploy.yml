name: Cloud Run Deploy (Manual)
on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: Tag to deploy
        default: "latest"
      allow_unauthenticated:
        description: Make service public
        type: boolean
        default: false
      service:
        description: Cloud Run service name
        default: "agent-data-test"
      run_canary:
        description: Run canary deploy + smoke test
        type: boolean
        default: false
concurrency:
  group: cloudrun-deploy-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  id-token: write
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  AR_REPO: agent-data
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Auth to GCP (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Deploy
        shell: bash
        run: |
          set -euo pipefail
          SERVICE="${{ inputs.service }}"
          TAG="${{ inputs.image_tag }}"
          IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPO}/${SERVICE}:${TAG}"
          if [[ "${{ inputs.allow_unauthenticated }}" == "true" ]]; then
            AUTH_FLAG="--allow-unauthenticated"
          else
            AUTH_FLAG="--no-allow-unauthenticated"
          fi

          # Retry to mitigate occasional ABORTED resource version conflicts
          for attempt in 1 2 3; do
            if gcloud run deploy "$SERVICE" \
              --image "$IMAGE" \
              --region "$REGION" \
              --platform managed \
              $AUTH_FLAG \
              --quiet 2>&1 | tee /tmp/deploy_service.out; then
              echo "Deploy succeeded on attempt $attempt"
              break
            fi
            if [[ $attempt -lt 3 ]]; then
              echo "WARN: deploy attempt $attempt failed; retrying in 10s..."
              sleep 10
            else
              echo "ERROR: deploy failed after $attempt attempts"
              exit 1
            fi
          done

  deploy-canary:
    name: Deploy Canary (no-traffic)
    if: ${{ inputs.run_canary }}
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      contents: read
      id-token: write
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      AR_REPO: agent-data
      SERVICE: ${{ inputs.service || 'agent-data-test' }}
    steps:
      - uses: actions/checkout@v4

      - name: Auth to GCP (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Deploy canary revision with no traffic
        id: canary
        shell: bash
        run: |
          set -euo pipefail
          SERVICE="${{ inputs.service || 'agent-data-test' }}"
          TAGVAL="${{ inputs.image_tag || 'latest' }}"
          IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPO}/${SERVICE}:${TAGVAL}"
          REV_TAG="canary-${GITHUB_SHA::7}"
          echo "image=${IMAGE}" >> "$GITHUB_OUTPUT"
          echo "rev_tag=${REV_TAG}" >> "$GITHUB_OUTPUT"
          DEPLOY_OUT="/tmp/deploy_canary.out"
          for attempt in 1 2 3; do
            if gcloud run deploy "$SERVICE" \
                --image "$IMAGE" \
                --region "$REGION" \
                --platform managed \
                --tag "$REV_TAG" \
                --no-traffic \
                --quiet 2>&1 | tee "$DEPLOY_OUT"; then
              echo "Canary deploy succeeded on attempt $attempt"
              break
            fi
            if [[ $attempt -lt 3 ]]; then
              echo "WARN: canary deploy attempt $attempt failed; retrying in 10s..."
              sleep 10
            else
              echo "ERROR: canary deploy failed after $attempt attempts"
              exit 1
            fi
          done

          # Extract direct canary URL from deploy output
          CANARY_URL=$(grep -Eo 'https://[a-zA-Z0-9.-]+' "$DEPLOY_OUT" | tail -1 || true)
          if [[ -z "$CANARY_URL" ]]; then
            echo "WARN: failed to parse canary URL from deploy output; deriving from base service URL"
            BASE_URL=$(gcloud run services describe "$SERVICE" --region "$REGION" --format 'value(status.url)' || true)
            if [[ -z "$BASE_URL" ]]; then
              echo "ERROR: unable to resolve base service URL for canary derivation" >&2
              exit 1
            fi
            CANARY_URL="${BASE_URL/https:\/\//https://$REV_TAG---}"
          fi
          echo "url=${CANARY_URL}" >> "$GITHUB_OUTPUT"

      - name: Resolve canary URL
        id: resolve
        shell: bash
        run: |
          set -euo pipefail
          URL="${{ steps.canary.outputs.url }}"
          if [[ -z "$URL" ]]; then
            echo "Failed to resolve canary URL from deploy output" >&2
            exit 1
          fi
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          echo "Canary URL: $URL"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install test deps (smoke)
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov requests

      - name: Run smoke tests against canary URL
        env:
          CANARY_URL: ${{ steps.resolve.outputs.url }}
        run: |
          pytest -q -m smoke
