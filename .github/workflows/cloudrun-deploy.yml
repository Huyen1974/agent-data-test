name: Cloud Run Deploy (Manual)

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Cloud Run service name"
        required: true
        default: "agent-data-test"
      image_tag:
        description: "Image tag to deploy (e.g. HEAD_SHA)"
        required: true
        default: "latest"
      allow_unauthenticated:
        description: "Allow unauthenticated"
        required: true
        default: "false"
      health_timeout:
        description: "Health-check timeout seconds (informational)"
        required: true
        default: "120"

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  AR_REPO: agent-data

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Deploy to Cloud Run
        shell: bash
        run: |
          set -euo pipefail
          SERVICE="${{ github.event.inputs.service }}"
          TAG="${{ github.event.inputs.image_tag }}"
          ALLOW="${{ github.event.inputs.allow_unauthenticated }}"
          HT="${{ github.event.inputs.health_timeout }}"
          IMG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${SERVICE}:${TAG}"
          echo "Deploying image: $IMG"
          AUTH_FLAG="--no-allow-unauthenticated"
          if [ "$ALLOW" = "true" ]; then AUTH_FLAG="--allow-unauthenticated"; fi

          gcloud run deploy "$SERVICE" \
            --image "$IMG" \
            --region "${{ env.REGION }}" \
            --platform managed \
            $AUTH_FLAG \
            --timeout 300 \
            --execution-environment gen2 \
            --port 8080 \
            --set-env-vars PORT=8080 \
            --quiet

          echo "health_timeout(input)=$HT (informational only)"
