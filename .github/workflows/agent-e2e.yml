name: Agent E2E
on:
  pull_request:
    paths: ['tests/**', 'scripts/**', 'agent_data/**']
  workflow_dispatch:
    inputs:
      e2e:
        description: 'Run E2E tests'
        required: false

jobs:
  agent-e2e:
    name: Agent E2E (CPG1.1, CPG1.2)
    runs-on: ubuntu-22.04
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'e2e'))
    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_WIF_PROVIDER: ${{ secrets.GCP_WIF_PROVIDER }}
      GCP_WIF_POOL: ${{ secrets.GCP_WIF_POOL }}
      GCP_SA_KEY_JSON: ${{ secrets.GCP_SA_KEY_JSON }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      QDRANT_CLOUD_MGMT_KEY: ${{ secrets.QDRANT_CLOUD_MGMT_KEY }}
      QDRANT_CLUSTER1_ID: ${{ secrets.QDRANT_CLUSTER1_ID }}
      QDRANT_CLUSTER1_KEY: ${{ secrets.QDRANT_CLUSTER1_KEY }}
      QDRANT_API_KEY: ${{ secrets.QDRANT_CLUSTER1_KEY }}
      QDRANT_CLUSTER_ID: ${{ secrets.QDRANT_CLUSTER1_ID }}
      QDRANT_REGION: "us-east4"
    steps:
      - uses: actions/checkout@v4

      - name: Verify secrets
        run: scripts/verify_secrets.sh

      - name: Secret smoke-test
        run: |
          echo "::notice::ðŸ”¥ Running secret smoke tests..."

          # OpenAI API test
          echo "::notice::Testing OpenAI API connectivity..."
          curl -fsSL -H "Authorization: Bearer $OPENAI_API_KEY" \
            https://api.openai.com/v1/models >/dev/null || {
            echo "::error::OpenAI API test failed - Set repo secret OPENAI_API_KEY with a valid sk-** key (â‰¥ 51 chars)."
            exit 1
          }
          echo "::notice::âœ… OpenAI API test passed"

          # GCP Service Account key test
          echo "::notice::Testing GCP SA key decoding..."
          echo "$GCP_SA_KEY_JSON" | base64 -d | jq -e '.client_email' >/dev/null || {
            echo "::error::GCP SA key test failed - invalid base64 JSON or missing client_email"
            exit 1
          }
          echo "::notice::âœ… GCP SA key test passed"

          echo "::notice::âœ… All secret smoke tests passed"

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Smoke test
        run: |
          python scripts/gen_fixtures.py --no-mock
          pytest tests/test_fixture_pipeline.py -m fixture --disable-warnings --override-ini="addopts=-q --maxfail=1"

      - name: Write PASS to memory log
        if: github.event_name != 'workflow_dispatch'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check combined status before writing PASS
          SHA=${{ github.sha }}
          STATE=$(curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/commits/$SHA/status \
            | jq -r .state)
          if [[ "$STATE" != "success" ]]; then
            echo "::notice::Combined CI state is $STATE (not success) â€” skipping PASS write on non-push event"
            exit 0
          fi
          echo "âœ… CI state confirmed as success, proceeding with PASS entry"
