name: Build and Push Docker Image

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: asia-southeast1
      AR_REPO: agent-data-test
      IMAGE_NAME: agent-data-test
      IMAGE_PATH: asia-southeast1-docker.pkg.dev/github-chatgpt-ggcloud/agent-data-test/agent-data-test:latest
      FALLBACK_REGION: ${{ secrets.GCP_REGION }}
      FALLBACK_AR_REPO: agent-data
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Ensure Artifact Registry exists
        run: |
          gcloud artifacts repositories describe "$AR_REPO" --location="$REGION" >/dev/null 2>&1 || \
          gcloud artifacts repositories create "$AR_REPO" --repository-format=docker --location="$REGION" \
            --description="Agent Data Docker images" || echo "WARN: repo may already exist or insufficient perms"

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker "$REGION-docker.pkg.dev" --quiet

      - name: Build Docker image
        run: |
          docker build -t "$IMAGE_PATH" . \
            && docker tag "$IMAGE_PATH" "${FALLBACK_REGION}-docker.pkg.dev/${PROJECT_ID}/${FALLBACK_AR_REPO}/${IMAGE_NAME}:latest"

      - name: Push Docker image (with fallback)
        shell: bash
        run: |
          set +e
          echo "Pushing primary: $IMAGE_PATH"
          docker push "$IMAGE_PATH"
          STATUS=$?
          if [[ $STATUS -ne 0 ]]; then
            echo "::warning::Primary push failed (likely repo missing). Trying fallback repository..."
            FB_IMAGE="${FALLBACK_REGION}-docker.pkg.dev/${PROJECT_ID}/${FALLBACK_AR_REPO}/${IMAGE_NAME}:latest"
            # Ensure fallback repo exists
            gcloud artifacts repositories describe "$FALLBACK_AR_REPO" --location="$FALLBACK_REGION" >/dev/null 2>&1 || \
            gcloud artifacts repositories create "$FALLBACK_AR_REPO" --repository-format=docker --location="$FALLBACK_REGION" || true
            gcloud auth configure-docker "${FALLBACK_REGION}-docker.pkg.dev" --quiet
            echo "Pushing fallback: $FB_IMAGE"
            docker push "$FB_IMAGE"
          fi
